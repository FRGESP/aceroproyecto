-- BASE DE DATOS EN MYSQL

CREATE DATABASE FERRETERIA;

USE FERRETERIA;

CREATE TABLE ESTADO(
    IdEstado INT AUTO_INCREMENT,
    Estado VARCHAR(50) NOT NULL,
    CONSTRAINT PK_ESTADO PRIMARY KEY(IdEstado)
);

CREATE TABLE MUNICIPIO(
    IdMunicipio INT AUTO_INCREMENT,
    Municipio VARCHAR(50) NOT NULL,
    IdEstado INT NOT NULL,
    CONSTRAINT PK_MUNICIPIO PRIMARY KEY(IdMunicipio),
    CONSTRAINT FK_MUNICIPIOTOESTADO FOREIGN KEY(IdEstado) REFERENCES ESTADO(IdEstado)
);

CREATE TABLE CODIGOPOSTAL(
    IdCodigoPostal INT AUTO_INCREMENT,
    CodigoPostal VARCHAR(10) NOT NULL,
    IdMunicipio INT NOT NULL,
    CONSTRAINT PK_CODIGOPOSTAL PRIMARY KEY(IdCodigoPostal),
    CONSTRAINT FK_CODIGOPOSTALTOMUNICIPIO FOREIGN KEY(IdMunicipio) REFERENCES MUNICIPIO(IdMunicipio)
);

CREATE TABLE COLONIA(
    IdColonia INT AUTO_INCREMENT,
    Colonia VARCHAR(75) NOT NULL,
    IdCodigoPostal INT NOT NULL,
    CONSTRAINT PK_COLONIA PRIMARY KEY(IdColonia),
    CONSTRAINT FK_COLONIATOCODIGOPOSTAL FOREIGN KEY(IdCodigoPostal) REFERENCES CODIGOPOSTAL(IdCodigoPostal)
);

CREATE TABLE DIRECCION(
    IdDireccion INT AUTO_INCREMENT,
    IdCodigoPostal INT NOT NULL,
    IdColonia INT NOT NULL,
    Calle VARCHAR(75) NOT NULL,
    CONSTRAINT PK_DIRECCION PRIMARY KEY(IdDireccion),
    CONSTRAINT FK_DIRECCIONTOCODIGOPOSTAL FOREIGN KEY(IdCodigoPostal) REFERENCES CODIGOPOSTAL(IdCodigoPostal),
    CONSTRAINT FK_DIRECCIONTOCOLONIA FOREIGN KEY(IdColonia) REFERENCES COLONIA(IdColonia)
);

CREATE TABLE SUCURSAL(
    IdSucursal INT AUTO_INCREMENT,
    Nombre VARCHAR(50) NOT NULL,
    IdDireccion INT NOT NULL,
    FechaRegistro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_SUCURSAL PRIMARY KEY(IdSucursal),
    CONSTRAINT FK_SUCURSALTODIRECCION FOREIGN KEY(IdDireccion) REFERENCES DIRECCION(IdDireccion)
);

CREATE TABLE ROL(
  IdRol INT AUTO_INCREMENT,
  Rol VARCHAR(100),
  CONSTRAINT PK_ROL PRIMARY KEY(IdRol)
);

CREATE TABLE CATEGORIAPRODUCTO(
    IdCategoria INT AUTO_INCREMENT,
    Categoria VARCHAR(100) NOT NULL UNIQUE,
    CONSTRAINT PK_CATEGORIA PRIMARY KEY(IdCategoria)
);

CREATE TABLE RANGOCLIENTE(
    IdRangoCliente INT AUTO_INCREMENT,
    Rango VARCHAR(50) NOT NULL,
    CONSTRAINT PK_RANGOCLIENTE PRIMARY KEY(IdRangoCliente)
);

CREATE TABLE CATEGORIA_RANGO(
    Id_CategoriaRango INT AUTO_INCREMENT,
    IdRangoCliente INT NOT NULL,
    IdCategoria INT NOT NULL,
    Ganancia DECIMAL(10,2) NOT NULL,
    CONSTRAINT PK_CATEGORIA_RANGO PRIMARY KEY(Id_CategoriaRango),
    CONSTRAINT FK_CATEGORIA_RANGOTORANGOCLI FOREIGN KEY(IdRangoCliente) REFERENCES RANGOCLIENTE(IdRangoCliente),
    CONSTRAINT FK_CATEGORIA_RANGOTOCATEGORIA FOREIGN KEY (IdCategoria) REFERENCES CATEGORIAPRODUCTO(IdCategoria)
);

CREATE TABLE ESTATUS(
    IdEstatus INT AUTO_INCREMENT,
    Estatus VARCHAR(100),
    CONSTRAINT PK_ESTATUS PRIMARY KEY(IdEstatus)
);

CREATE TABLE PERSONA(
    IdPersona INT AUTO_INCREMENT,
    Nombre VARCHAR(300) NOT NULL,
    ApellidoPaterno VARCHAR(300) NOT NULL,
    ApellidoMaterno VARCHAR(300) NOT NULL,
    Telefono VARCHAR(15) NOT NULL,
    Edad VARCHAR(3) NOT NULL,
    CONSTRAINT PK_PERSONA PRIMARY KEY(IdPersona)
);

CREATE TABLE EMPLEADO(
    IdEmpleado INT AUTO_INCREMENT,
    IdPersona INT NOT NULL,
    IdRol INT NOT NULL,
    IdEstatus INT NOT NULL,
    IdSucursal INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_EMPLEADO PRIMARY KEY(IdEmpleado),
    CONSTRAINT FK_EMPLEADOTOPERSONA FOREIGN KEY(IdPersona) REFERENCES PERSONA(IdPersona) ON DELETE CASCADE,
    CONSTRAINT FK_EMPLEADOTOESTATUS FOREIGN KEY(IdEstatus) REFERENCES ESTATUS(IdEstatus) ON DELETE CASCADE,
    CONSTRAINT FK_EMPLEADOTOROL FOREIGN KEY(IdRol) REFERENCES ROL(IdRol) ON DELETE CASCADE,
    CONSTRAINT FK_EMPLEADOTOSUCURSAL FOREIGN KEY(IdSucursal) REFERENCES SUCURSAL(IdSucursal)
);

CREATE TABLE CLIENTE(
    IdCliente INT AUTO_INCREMENT,
    IdPersona INT NOT NULL,
    IdDireccion INT NOT NULL,
    IdRangoCliente INT NOT NULL,
    Credito DECIMAL(10,2) DEFAULT 0,
    CreditoMaximo DECIMAL(10,2) DEFAULT 0,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_CLIENTE PRIMARY KEY(IdCliente),
    CONSTRAINT FK_CLIENTETOPERSONA FOREIGN KEY(IdPersona) REFERENCES PERSONA(IdPersona),
    CONSTRAINT FK_CLIENTETODIRECCION FOREIGN KEY(IdDireccion) REFERENCES DIRECCION(IdDireccion),
    CONSTRAINT FK_CLIENTETORANGOCLIENTE FOREIGN KEY(IdRangoCliente) REFERENCES RANGOCLIENTE(IdRangoCliente)
);

CREATE TABLE REPARTIDOR_CLIENTE(
    IdCliente INT NOT NULL,
    IdEmpleado INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Activo BOOLEAN DEFAULT TRUE,
    CONSTRAINT PK_REPARTIDOR_CLIENTE PRIMARY KEY(IdCliente,IdEmpleado),
    CONSTRAINT FK_REPARTIDOR_CLIENTETOCLIENTE FOREIGN KEY(IdCliente) REFERENCES CLIENTE(IdCliente),
    CONSTRAINT FK_REPARTIDOR_CLIENTETOEMPLEADO FOREIGN KEY(IdEmpleado) REFERENCES EMPLEADO(IdEmpleado)
);

CREATE TABLE USUARIO(
    IdUsuario INT AUTO_INCREMENT,
    Contrase√±a VARCHAR(100) NOT NULL,
    IdEmpleado INT NOT NULL,
    CONSTRAINT PK_USUARIO PRIMARY KEY(IdUsuario),
    CONSTRAINT FK_USUARIOTOEMPLEADO FOREIGN KEY(IdEmpleado) REFERENCES EMPLEADO(IdEmpleado) ON DELETE CASCADE
);

CREATE TABLE PESO(
    IdPeso INT AUTO_INCREMENT,
    PesoInicial DECIMAL(10,2) NOT NULL,
    PesoFinal DECIMAL(10,2) NOT NULL,
    CONSTRAINT PK_PESO PRIMARY KEY(IdPeso)
);

CREATE TABLE CARGO(
    IdCargo INT AUTO_INCREMENT,
    Cargo DECIMAL(10,2) NOT NULL,
    IdCategoria INT NOT NULL,
    CONSTRAINT PK_CARGO PRIMARY KEY(IdCargo),
    CONSTRAINT FK_CARGOTOCATEGORIA FOREIGN KEY(IdCategoria) REFERENCES CATEGORIAPRODUCTO(IdCategoria)
);

CREATE TABLE PRODUCTO(
    IdProducto INT AUTO_INCREMENT,
    Descripcion VARCHAR(100) NOT NULL,
    IdCategoria INT NOT NULL,
    IdPeso INT NOT NULL,
    CostoBase DECIMAL(10,2),
    CostoExtra DECIMAL(10,2),
    CONSTRAINT PK_PRODUCTO PRIMARY KEY(IdProducto),
    CONSTRAINT FK_PRODUCTOTOPESO FOREIGN KEY(IdPeso) REFERENCES PESO(IdPeso),
    CONSTRAINT FK_PRODUCTOTOCATEGORIA FOREIGN KEY(IdCategoria) REFERENCES CATEGORIAPRODUCTO(IdCategoria)
);

CREATE TABLE INVENTARIO_SUCURSAL(
    IdInventario INT AUTO_INCREMENT,
    IdProducto INT NOT NULL,
    IdSucursal INT NOT NULL,
    Stock INT NOT NULL,
    CONSTRAINT PK_INVENTARIO_SUCURSAL PRIMARY KEY(IdInventario),
    CONSTRAINT FK_INVENTARIOTOPRODUCTO FOREIGN KEY(IdProducto) REFERENCES PRODUCTO(IdProducto),
    CONSTRAINT FK_INVENTARIOSUCURSAL FOREIGN KEY(IdSucursal) REFERENCES SUCURSAL(IdSucursal)
);

CREATE TABLE PEDIDO(
    IdPedido INT AUTO_INCREMENT,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    IdEmpleado INT NOT NULL,
    IdCliente INT NOT NULL,
    RangoCliente INT NOT NULL,
    Estatus ENUM('Pendiente','Pagado', 'Enviado', 'Entregado', 'Cancelado'),
    Repartidor INT DEFAULT NULL,
    Receptor VARCHAR(100),
    MetodoPago ENUM('Contado', 'Transferencia', 'Credito'),
    CONSTRAINT PK_PEDIDO PRIMARY KEY(IdPedido),
    CONSTRAINT FK_PEDIDOTOEMPLEADO FOREIGN KEY(IdEmpleado) REFERENCES EMPLEADO(IdEmpleado),
    CONSTRAINT FK_PEDIDOTOCLIENTE FOREIGN KEY(IdCliente) REFERENCES CLIENTE(IdCliente),
    CONSTRAINT FK_PEDIDOREPARTIDORTOEMPLEADO FOREIGN KEY(Repartidor) REFERENCES EMPLEADO(IdEmpleado),
    CONSTRAINT FK_PEDIDOTORANGOCLIENTE FOREIGN KEY(RangoCliente) REFERENCES RANGOCLIENTE(IdRangoCliente)
);

CREATE TABLE PEDIDO_PRODUCTOS(
    IdPedido INT NOT NULL,
    IdProducto INT NOT NULL,
    CONSTRAINT PK_PEDIDO_PRODUCTOS PRIMARY KEY(IdPedido,IdProducto),
    CONSTRAINT FK_PEDIDO_PRODUCTOTOPEDIDO FOREIGN KEY(IdPedido) REFERENCES PEDIDO(IdPedido),
    CONSTRAINT FK_PEDIDO_PRODUCTOTOPRODUCTO FOREIGN KEY(IdProducto) REFERENCES PRODUCTO(IdProducto)
);

CREATE TABLE REGISTRO_PRODUCTO(
    IdRegistro INT AUTO_INCREMENT,
    IdProducto INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Accion VARCHAR(30) NOT NULL,
    Campo VARCHAR(30) NOT NULL,
    ValorAnterior VARCHAR(50) NOT NULL,
    ValorActual VARCHAR(50) NOT NULL,
    IdEmpleado INT NOT NULL,
    CONSTRAINT PK_REGISTRO_PRODUCTO PRIMARY KEY(IdRegistro),
    CONSTRAINT FK_REGISTRO_PRODTOPRODUCTO FOREIGN KEY(IdProducto) REFERENCES PRODUCTO(IdProducto),
    CONSTRAINT FK_REGISTRO_PROTOEMPLEADO FOREIGN KEY(IdEmpleado) REFERENCES EMPLEADO(IdEmpleado)
);

CREATE TABLE REGISTRO_PEDIDO(
    IdRegistro INT AUTO_INCREMENT,
    IdPedido INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Accion VARCHAR(30) NOT NULL,
    Campo VARCHAR(30) NOT NULL,
    ValorAnterior VARCHAR(50) NOT NULL,
    ValorActual VARCHAR(50) NOT NULL,
    IdEmpleado INT NOT NULL,
    CONSTRAINT PK_REGISTRO_PEDIDO PRIMARY KEY(IdRegistro),
    CONSTRAINT FK_REGISTRO_PEDIDOTOPEDIDO FOREIGN KEY(IdPedido) REFERENCES PEDIDO(IdPedido),
    CONSTRAINT FK_REGISTRO_PEDIDOTOEMPLEADO FOREIGN KEY(IdEmpleado) REFERENCES EMPLEADO(IdEmpleado)
);

CREATE TABLE REGISTRO_CLIENTE(
    IdRegistro INT AUTO_INCREMENT,
    IdCliente INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Accion VARCHAR(30) NOT NULL,
    Campo VARCHAR(30) NOT NULL,
    ValorAnterior VARCHAR(50) NOT NULL,
    ValorActual VARCHAR(50) NOT NULL,
    IdEmpleado INT NOT NULL,
    CONSTRAINT PK_REGISTRO_CLIENTE PRIMARY KEY(IdRegistro),
    CONSTRAINT FK_REGISTRO_CLIENTETOPEDIDO FOREIGN KEY(IdCliente) REFERENCES CLIENTE(IdCliente),
    CONSTRAINT FK_REGISTRO_CLIENTETOEMPLEADO FOREIGN KEY(IdEmpleado) REFERENCES EMPLEADO(IdEmpleado)
);

-- STOCK PROCEDURE

DROP FUNCTION  IF EXISTS ObtenerDireccion;
CREATE FUNCTION ObtenerDireccion(ID INT)
RETURNS VARCHAR(100)
    DETERMINISTIC
    BEGIN
        DECLARE DIRECCION VARCHAR(100);
        SET DIRECCION = (SELECT CONCAT(E.Estado, ' ', M.Municipio, ' ', C2.Colonia, ' ', C.CodigoPostal) AS DIRECCION FROM ESTADO AS E INNER JOIN MUNICIPIO AS M ON E.IdEstado = M.IdEstado INNER JOIN CODIGOPOSTAL AS C ON M.IdMunicipio = C.IdMunicipio INNER JOIN COLONIA C2 on C.IdCodigoPostal = C2.IdCodigoPostal WHERE C.CodigoPostal = ID LIMIT 1);
        RETURN DIRECCION;
    end;

SELECT ObtenerDireccion(38940);

SELECT CONCAT(E.Estado, ' ', M.Municipio, ' ', C2.Colonia, ' ', C.CodigoPostal) AS DIRECCION FROM ESTADO AS E INNER JOIN MUNICIPIO AS M ON E.IdEstado = M.IdEstado INNER JOIN CODIGOPOSTAL AS C ON M.IdMunicipio = C.IdMunicipio INNER JOIN COLONIA C2 on C.IdCodigoPostal = C2.IdCodigoPostal WHERE C.CodigoPostal = 29000;